{"blog_post": true, "layout": "post", "title": "Pygments로 소스코드 예쁘게 만들기", "aliases": "Pygments로 소스코드 예쁘게 만들기", "subtitle": null, "thumbnail-img": "", "date": "20240329", "parse-url": "", "sources": "", "categories": ["Python"], "tags": ["Python", "Pygments"], "html": "\n            <div\n            id=\"pygen-1\"\n            class=\"w-full flex items-center justify-center\"\n            style=\"\"\n            >\n                <div\n                id=\"pygen-2\"\n                class=\"w-full flex items-center justify-center\"\n                style=\"\"\n                >\n                    <div\n                    id=\"pygen-3\"\n                    class=\"w-full\"\n                    style=\"max-width:800px;\"\n                    >\n                        <p>블로그에는 소스코드를 예쁘게 보여주는 기능이 필요하다.  이전글인 <a  href=\"/post/20240323_1711156165597\" target=\"_blank\">옵시디언으로 블로그 만들기</a>에서 설명한 것처럼 이 블로그는 티스토리나 velog 등 일반적인 블로그 플랫폼을 사용하지 않고 만들어졌다. 옵시디언에 적은 문서를 바로 포스팅하는 방식이다. 블로그를 구성하는 모든 부분을 일일이 구현해줘야하기 때문에 소스코드를 이쁘게 포맷팅하는 기능도 구현했다. 이번 포스팅에서는 그 방법을 간단히 공유해보려 한다. </p><h3>기존 방법</h3><p>아래와 같은 소스코드를 웹에서 이쁘게 보이게 하려면 어떻게 해야할까? 예전에 티스토리를 사용할때는 <a href=\"http://hilite.me/\" target=\"_blank\">hilite.me</a> 와 같은 <span style=\"background-color:powderblue;width: fit-content;\">Code Beautify</span> 웹에서 코드를 복사하고 만들어진 html 코드를 티스토리 에디터에 넣었던 걸로 기억한다 (이때 따로 html 편집 모드에 넣어야한다). 이런식으로 하다가 몇년 전에 티스토리에서 <span style=\"background-color:powderblue;width: fit-content;\">코드블럭</span>이라는게 생긴걸로 기억한다. 코드블럭을 쓰면 조금 더 간편해지긴 하지만, 커스터마이징이 좀 힘들었던걸로 기억한다. </p>\n                    </div>\n                </div>\n            </div>\n            \n            <div\n            id=\"pygen-1\"\n            class=\"w-full flex items-center justify-center\"\n            style=\"padding-top: 2.25rem;padding-bottom: 2.25rem;\"\n            >\n                <div\n                id=\"pygen-2\"\n                class=\"w-full flex items-center justify-center\"\n                style=\"--tw-bg-opacity: 1; background-color: rgba(255, 251, 235, var(--tw-bg-opacity));\"\n                >\n                    <div\n                    id=\"pygen-3\"\n                    class=\"w-full\"\n                    style=\"max-width:800px;\"\n                    >\n                        <h5 style=\" color: #000; padding-top: 0.25rem; padding-bottom: 0.25rem; \" ><strong>일반적인 문자열(파이썬 코드)</strong></h5>  <div style=\" position: relative; padding-top: 1.25rem; padding-bottom: 1.25rem;  margin-bottom: 1.25rem;   \"> <style scoped> td.linenos { padding-right: 0.5rem; } div.linenodiv { color: #ffffff } table{ table-layout: fixed; color: #ffffff; width: 100%; font-family: \"Almarai\", sans-serif; } table > tbody > tr { display: flex; flex-direction: row; } td.code { width: 100%; overflow-x: auto; } </style>  <p>def hello():</p><p>&nbsp;&nbsp;print(\"hello world\")</p><p></p> </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div\n            id=\"pygen-1\"\n            class=\"w-full flex items-center justify-center\"\n            style=\"padding-top: 2.25rem;padding-bottom: 2.25rem;\"\n            >\n                <div\n                id=\"pygen-2\"\n                class=\"w-full flex items-center justify-center\"\n                style=\"--tw-bg-opacity: 1; background-color: rgba(255, 251, 235, var(--tw-bg-opacity));\"\n                >\n                    <div\n                    id=\"pygen-3\"\n                    class=\"w-full\"\n                    style=\"max-width:800px;\"\n                    >\n                        <h5 style=\" color: #000; padding-top: 0.25rem; padding-bottom: 0.25rem; \" ><strong>변환된 HTML 코드</strong></h5>  <div style=\" position: relative; padding-top: 1.25rem; padding-bottom: 1.25rem;  margin-bottom: 1.25rem; background-color: #2E3440; border-radius: 1rem; \"> <style scoped> td.linenos { padding-right: 0.5rem; } div.linenodiv { color: #ffffff } table{ table-layout: fixed; color: #ffffff; width: 100%; font-family: \"Almarai\", sans-serif; } table > tbody > tr { display: flex; flex-direction: row; } td.code { width: 100%; overflow-x: auto; } pre { line-height: 125%; } td.linenos .normal { color: #D8DEE9; background-color: #242933; padding-left: 5px; padding-right: 5px; } span.linenos { color: #D8DEE9; background-color: #242933; padding-left: 5px; padding-right: 5px; } td.linenos .special { color: #242933; background-color: #D8DEE9; padding-left: 5px; padding-right: 5px; } span.linenos.special { color: #242933; background-color: #D8DEE9; padding-left: 5px; padding-right: 5px; } .code .hll { background-color: #3B4252 } .code .c { color: #616e87; font-style: italic } .code .err { color: #bf616a } .code .esc { color: #d8dee9 } .code .g { color: #d8dee9 } .code .k { color: #81a1c1; font-weight: bold } .code .l { color: #d8dee9 } .code .n { color: #d8dee9 } .code .o { color: #81a1c1; font-weight: bold } .code .x { color: #d8dee9 } .code .p { color: #eceff4 } .code .ch { color: #616e87; font-style: italic } .code .cm { color: #616e87; font-style: italic } .code .cp { color: #5e81ac; font-style: italic } .code .cpf { color: #616e87; font-style: italic } .code .c1 { color: #616e87; font-style: italic } .code .cs { color: #616e87; font-style: italic } .code .gd { color: #bf616a } .code .ge { color: #d8dee9; font-style: italic } .code .ges { color: #d8dee9; font-weight: bold; font-style: italic } .code .gr { color: #bf616a } .code .gh { color: #88c0d0; font-weight: bold } .code .gi { color: #a3be8c } .code .go { color: #d8dee9 } .code .gp { color: #616e88; font-weight: bold } .code .gs { color: #d8dee9; font-weight: bold } .code .gu { color: #88c0d0; font-weight: bold } .code .gt { color: #bf616a } .code .kc { color: #81a1c1; font-weight: bold } .code .kd { color: #81a1c1; font-weight: bold } .code .kn { color: #81a1c1; font-weight: bold } .code .kp { color: #81a1c1 } .code .kr { color: #81a1c1; font-weight: bold } .code .kt { color: #81a1c1 } .code .ld { color: #d8dee9 } .code .m { color: #b48ead } .code .s { color: #a3be8c } .code .na { color: #8fbcbb } .code .nb { color: #81a1c1 } .code .nc { color: #8fbcbb } .code .no { color: #8fbcbb } .code .nd { color: #d08770 } .code .ni { color: #d08770 } .code .ne { color: #bf616a } .code .nf { color: #88c0d0 } .code .nl { color: #d8dee9 } .code .nn { color: #8fbcbb } .code .nx { color: #d8dee9 } .code .py { color: #d8dee9 } .code .nt { color: #81a1c1 } .code .nv { color: #d8dee9 } .code .ow { color: #81a1c1; font-weight: bold } .code .pm { color: #eceff4 } .code .w { color: #d8dee9 } .code .mb { color: #b48ead } .code .mf { color: #b48ead } .code .mh { color: #b48ead } .code .mi { color: #b48ead } .code .mo { color: #b48ead } .code .sa { color: #a3be8c } .code .sb { color: #a3be8c } .code .sc { color: #a3be8c } .code .dl { color: #a3be8c } .code .sd { color: #616e87 } .code .s2 { color: #a3be8c } .code .se { color: #ebcb8b } .code .sh { color: #a3be8c } .code .si { color: #a3be8c } .code .sx { color: #a3be8c } .code .sr { color: #ebcb8b } .code .s1 { color: #a3be8c } .code .ss { color: #a3be8c } .code .bp { color: #81a1c1 } .code .fm { color: #88c0d0 } .code .vc { color: #d8dee9 } .code .vg { color: #d8dee9 } .code .vi { color: #d8dee9 } .code .vm { color: #d8dee9 } .code .il { color: #b48ead }</style>  <div onclick=' (function () { navigator.clipboard.writeText(`<!-- HTML generated using hilite.me -->\n<div style=\"background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;\">\n<pre style=\"margin: 0; line-height: 125%\"><span style=\"color: #008800; font-weight: bold\">def</span> <span style=\"color: #0066BB; font-weight: bold\">hello</span>():\n  <span style=\"color: #008800; font-weight: bold\">print</span>(<span style=\"background-color: #fff0f0\">&quot;hello world&quot;</span>)\n</pre>\n</div>\n\n`); alert(\"Source code copied to clipboard!\"); })(); ' style=\" position: absolute; right: 0px; top: 0px; text-align: right; color: #fff; cursor: pointer; padding: 0.5rem 0.5rem; border-radius: 0.5rem; \" >📋 COPY</div>  <div class=\"code\"><table class=\"codetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre><span class=\"normal\">1</span>\r\n<span class=\"normal\">2</span>\r\n<span class=\"normal\">3</span>\r\n<span class=\"normal\">4</span>\r\n<span class=\"normal\">5</span>\r\n<span class=\"normal\">6</span></pre></div></td><td class=\"code\"><div><pre><span></span><code><span class=\"cm\">&lt;!-- HTML generated using hilite.me --&gt;</span>\r\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">&quot;background: #ffffff; overflow:auto;width:auto;border:solid gray;border-width:.1em .1em .1em .8em;padding:.2em .6em;&quot;</span><span class=\"p\">&gt;</span>\r\n<span class=\"p\">&lt;</span><span class=\"nt\">pre</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">&quot;margin: 0; line-height: 125%&quot;</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">span</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">&quot;color: #008800; font-weight: bold&quot;</span><span class=\"p\">&gt;</span>def<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span> <span class=\"p\">&lt;</span><span class=\"nt\">span</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">&quot;color: #0066BB; font-weight: bold&quot;</span><span class=\"p\">&gt;</span>hello<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>():\r\n  <span class=\"p\">&lt;</span><span class=\"nt\">span</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">&quot;color: #008800; font-weight: bold&quot;</span><span class=\"p\">&gt;</span>print<span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>(<span class=\"p\">&lt;</span><span class=\"nt\">span</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">&quot;background-color: #fff0f0&quot;</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;quot;</span>hello world<span class=\"ni\">&amp;quot;</span><span class=\"p\">&lt;/</span><span class=\"nt\">span</span><span class=\"p\">&gt;</span>)\r\n<span class=\"p\">&lt;/</span><span class=\"nt\">pre</span><span class=\"p\">&gt;</span>\r\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\r\n</code></pre></div></td></tr></table></div>\r\n </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div\n            id=\"pygen-1\"\n            class=\"w-full flex items-center justify-center\"\n            style=\"\"\n            >\n                <div\n                id=\"pygen-2\"\n                class=\"w-full flex items-center justify-center\"\n                style=\"\"\n                >\n                    <div\n                    id=\"pygen-3\"\n                    class=\"w-full\"\n                    style=\"max-width:800px;\"\n                    >\n                        <h3>현재 방법</h3><p>어쨌든 기존의 방법은 매우 번거로운 일이다. 티스토리 같은 웹 베이스 블로그를 이용해서 포스팅을 하다보면 이런 과정 자체가 너무 귀찮고 힘이든다. 다시 돌아와서, 지금 현재 하고 있는 방식은 옵시디언 경로에 있는 markdown 문서를 <span style=\"background-color:powderblue;width: fit-content;\">Python</span>으로 읽어서 <span style=\"background-color:powderblue;width: fit-content;\">HTML</span>을 생성하는 방식이기 때문에 위에서 필요한 Beautify Code과정을 파이썬에 내재화할수 있다. 우선 pygments를 설치해야한다</p>\n                    </div>\n                </div>\n            </div>\n            \n            <div\n            id=\"pygen-1\"\n            class=\"w-full flex items-center justify-center\"\n            style=\"padding-top: 2.25rem;padding-bottom: 2.25rem;\"\n            >\n                <div\n                id=\"pygen-2\"\n                class=\"w-full flex items-center justify-center\"\n                style=\"--tw-bg-opacity: 1; background-color: rgba(255, 251, 235, var(--tw-bg-opacity));\"\n                >\n                    <div\n                    id=\"pygen-3\"\n                    class=\"w-full\"\n                    style=\"max-width:800px;\"\n                    >\n                        <div style=\" position: relative; padding-top: 1.25rem; padding-bottom: 1.25rem; margin-top: 1.25rem; margin-bottom: 1.25rem; background-color: #2E3440; border-radius: 1rem; \"> <style scoped> td.linenos { padding-right: 0.5rem; } div.linenodiv { color: #ffffff } table{ table-layout: fixed; color: #ffffff; width: 100%; font-family: \"Almarai\", sans-serif; } table > tbody > tr { display: flex; flex-direction: row; } td.code { width: 100%; overflow-x: auto; } pre { line-height: 125%; } td.linenos .normal { color: #D8DEE9; background-color: #242933; padding-left: 5px; padding-right: 5px; } span.linenos { color: #D8DEE9; background-color: #242933; padding-left: 5px; padding-right: 5px; } td.linenos .special { color: #242933; background-color: #D8DEE9; padding-left: 5px; padding-right: 5px; } span.linenos.special { color: #242933; background-color: #D8DEE9; padding-left: 5px; padding-right: 5px; } .code .hll { background-color: #3B4252 } .code .c { color: #616e87; font-style: italic } .code .err { color: #bf616a } .code .esc { color: #d8dee9 } .code .g { color: #d8dee9 } .code .k { color: #81a1c1; font-weight: bold } .code .l { color: #d8dee9 } .code .n { color: #d8dee9 } .code .o { color: #81a1c1; font-weight: bold } .code .x { color: #d8dee9 } .code .p { color: #eceff4 } .code .ch { color: #616e87; font-style: italic } .code .cm { color: #616e87; font-style: italic } .code .cp { color: #5e81ac; font-style: italic } .code .cpf { color: #616e87; font-style: italic } .code .c1 { color: #616e87; font-style: italic } .code .cs { color: #616e87; font-style: italic } .code .gd { color: #bf616a } .code .ge { color: #d8dee9; font-style: italic } .code .ges { color: #d8dee9; font-weight: bold; font-style: italic } .code .gr { color: #bf616a } .code .gh { color: #88c0d0; font-weight: bold } .code .gi { color: #a3be8c } .code .go { color: #d8dee9 } .code .gp { color: #616e88; font-weight: bold } .code .gs { color: #d8dee9; font-weight: bold } .code .gu { color: #88c0d0; font-weight: bold } .code .gt { color: #bf616a } .code .kc { color: #81a1c1; font-weight: bold } .code .kd { color: #81a1c1; font-weight: bold } .code .kn { color: #81a1c1; font-weight: bold } .code .kp { color: #81a1c1 } .code .kr { color: #81a1c1; font-weight: bold } .code .kt { color: #81a1c1 } .code .ld { color: #d8dee9 } .code .m { color: #b48ead } .code .s { color: #a3be8c } .code .na { color: #8fbcbb } .code .nb { color: #81a1c1 } .code .nc { color: #8fbcbb } .code .no { color: #8fbcbb } .code .nd { color: #d08770 } .code .ni { color: #d08770 } .code .ne { color: #bf616a } .code .nf { color: #88c0d0 } .code .nl { color: #d8dee9 } .code .nn { color: #8fbcbb } .code .nx { color: #d8dee9 } .code .py { color: #d8dee9 } .code .nt { color: #81a1c1 } .code .nv { color: #d8dee9 } .code .ow { color: #81a1c1; font-weight: bold } .code .pm { color: #eceff4 } .code .w { color: #d8dee9 } .code .mb { color: #b48ead } .code .mf { color: #b48ead } .code .mh { color: #b48ead } .code .mi { color: #b48ead } .code .mo { color: #b48ead } .code .sa { color: #a3be8c } .code .sb { color: #a3be8c } .code .sc { color: #a3be8c } .code .dl { color: #a3be8c } .code .sd { color: #616e87 } .code .s2 { color: #a3be8c } .code .se { color: #ebcb8b } .code .sh { color: #a3be8c } .code .si { color: #a3be8c } .code .sx { color: #a3be8c } .code .sr { color: #ebcb8b } .code .s1 { color: #a3be8c } .code .ss { color: #a3be8c } .code .bp { color: #81a1c1 } .code .fm { color: #88c0d0 } .code .vc { color: #d8dee9 } .code .vg { color: #d8dee9 } .code .vi { color: #d8dee9 } .code .vm { color: #d8dee9 } .code .il { color: #b48ead }</style>  <div onclick=' (function () { navigator.clipboard.writeText(`conda install conda-forge::pygments -y\n`); alert(\"Source code copied to clipboard!\"); })(); ' style=\" position: absolute; right: 0px; top: 0px; text-align: right; color: #fff; cursor: pointer; padding: 0.5rem 0.5rem; border-radius: 0.5rem; \" >📋 COPY</div>  <div class=\"code\"><table class=\"codetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre><span class=\"normal\">1</span></pre></div></td><td class=\"code\"><div><pre><span></span><code>conda<span class=\"w\"> </span>install<span class=\"w\"> </span>conda-forge::pygments<span class=\"w\"> </span>-y\r\n</code></pre></div></td></tr></table></div>\r\n </div>\n                    </div>\n                </div>\n            </div>\n            \n            <div\n            id=\"pygen-1\"\n            class=\"w-full flex items-center justify-center\"\n            style=\"\"\n            >\n                <div\n                id=\"pygen-2\"\n                class=\"w-full flex items-center justify-center\"\n                style=\"\"\n                >\n                    <div\n                    id=\"pygen-3\"\n                    class=\"w-full\"\n                    style=\"max-width:800px;\"\n                    >\n                        <p>그리고 아래 소스코드는 pygments를 이용해 일반 소스코드 문자열을 HTML 코드로 변환하는 예제 파이썬 코드다. 아래 소스코드를 실행하면 HTML 파일이 하나 생성된다. 해당 문서를 열어보면 소스코드가 이쁘게 잘 포맷팅된 것을 확인할수 있다. </p>\n                    </div>\n                </div>\n            </div>\n            \n            <div\n            id=\"pygen-1\"\n            class=\"w-full flex items-center justify-center\"\n            style=\"padding-top: 2.25rem;padding-bottom: 2.25rem;\"\n            >\n                <div\n                id=\"pygen-2\"\n                class=\"w-full flex items-center justify-center\"\n                style=\"--tw-bg-opacity: 1; background-color: rgba(255, 251, 235, var(--tw-bg-opacity));\"\n                >\n                    <div\n                    id=\"pygen-3\"\n                    class=\"w-full\"\n                    style=\"max-width:800px;\"\n                    >\n                        <div style=\" position: relative; padding-top: 1.25rem; padding-bottom: 1.25rem; margin-top: 1.25rem; margin-bottom: 1.25rem; background-color: #2E3440; border-radius: 1rem; \"> <style scoped> td.linenos { padding-right: 0.5rem; } div.linenodiv { color: #ffffff } table{ table-layout: fixed; color: #ffffff; width: 100%; font-family: \"Almarai\", sans-serif; } table > tbody > tr { display: flex; flex-direction: row; } td.code { width: 100%; overflow-x: auto; } pre { line-height: 125%; } td.linenos .normal { color: #D8DEE9; background-color: #242933; padding-left: 5px; padding-right: 5px; } span.linenos { color: #D8DEE9; background-color: #242933; padding-left: 5px; padding-right: 5px; } td.linenos .special { color: #242933; background-color: #D8DEE9; padding-left: 5px; padding-right: 5px; } span.linenos.special { color: #242933; background-color: #D8DEE9; padding-left: 5px; padding-right: 5px; } .code .hll { background-color: #3B4252 } .code .c { color: #616e87; font-style: italic } .code .err { color: #bf616a } .code .esc { color: #d8dee9 } .code .g { color: #d8dee9 } .code .k { color: #81a1c1; font-weight: bold } .code .l { color: #d8dee9 } .code .n { color: #d8dee9 } .code .o { color: #81a1c1; font-weight: bold } .code .x { color: #d8dee9 } .code .p { color: #eceff4 } .code .ch { color: #616e87; font-style: italic } .code .cm { color: #616e87; font-style: italic } .code .cp { color: #5e81ac; font-style: italic } .code .cpf { color: #616e87; font-style: italic } .code .c1 { color: #616e87; font-style: italic } .code .cs { color: #616e87; font-style: italic } .code .gd { color: #bf616a } .code .ge { color: #d8dee9; font-style: italic } .code .ges { color: #d8dee9; font-weight: bold; font-style: italic } .code .gr { color: #bf616a } .code .gh { color: #88c0d0; font-weight: bold } .code .gi { color: #a3be8c } .code .go { color: #d8dee9 } .code .gp { color: #616e88; font-weight: bold } .code .gs { color: #d8dee9; font-weight: bold } .code .gu { color: #88c0d0; font-weight: bold } .code .gt { color: #bf616a } .code .kc { color: #81a1c1; font-weight: bold } .code .kd { color: #81a1c1; font-weight: bold } .code .kn { color: #81a1c1; font-weight: bold } .code .kp { color: #81a1c1 } .code .kr { color: #81a1c1; font-weight: bold } .code .kt { color: #81a1c1 } .code .ld { color: #d8dee9 } .code .m { color: #b48ead } .code .s { color: #a3be8c } .code .na { color: #8fbcbb } .code .nb { color: #81a1c1 } .code .nc { color: #8fbcbb } .code .no { color: #8fbcbb } .code .nd { color: #d08770 } .code .ni { color: #d08770 } .code .ne { color: #bf616a } .code .nf { color: #88c0d0 } .code .nl { color: #d8dee9 } .code .nn { color: #8fbcbb } .code .nx { color: #d8dee9 } .code .py { color: #d8dee9 } .code .nt { color: #81a1c1 } .code .nv { color: #d8dee9 } .code .ow { color: #81a1c1; font-weight: bold } .code .pm { color: #eceff4 } .code .w { color: #d8dee9 } .code .mb { color: #b48ead } .code .mf { color: #b48ead } .code .mh { color: #b48ead } .code .mi { color: #b48ead } .code .mo { color: #b48ead } .code .sa { color: #a3be8c } .code .sb { color: #a3be8c } .code .sc { color: #a3be8c } .code .dl { color: #a3be8c } .code .sd { color: #616e87 } .code .s2 { color: #a3be8c } .code .se { color: #ebcb8b } .code .sh { color: #a3be8c } .code .si { color: #a3be8c } .code .sx { color: #a3be8c } .code .sr { color: #ebcb8b } .code .s1 { color: #a3be8c } .code .ss { color: #a3be8c } .code .bp { color: #81a1c1 } .code .fm { color: #88c0d0 } .code .vc { color: #d8dee9 } .code .vg { color: #d8dee9 } .code .vi { color: #d8dee9 } .code .vm { color: #d8dee9 } .code .il { color: #b48ead }</style>  <div onclick=' (function () { navigator.clipboard.writeText(`def format(source_code, source_type):\n    from pygments import highlight\n    from pygments.lexers import get_lexer_by_name\n    from pygments.styles import get_style_by_name\n    from pygments.formatters import HtmlFormatter\n\n    # https://pygments.org/styles/\n    # 위 사이트를 참고하여 원하는 스타일을 고른다\n    style = get_style_by_name(\"nord\")\n    background_color = style.background_color\n    lexer = get_lexer_by_name(source_type, stripall=True)\n    formatter = HtmlFormatter(\n        style=style,\n        linenos=\"table\",\n        cssclass=\"code\",\n        wrapcode=True,\n    )\n\n    css = formatter.get_style_defs()\n    result = highlight(source_code, lexer, formatter)\n    import re\n    css = re.sub(re.compile(\"/\\*.*?\\*/\", re.DOTALL), \"\", css)\n    css = \"\".join([x.strip() for x in css.split(\"\\n\")])\n    html = f\"\"\"\n    <div style=\"\n            background-color: {background_color};\n            padding-top: 1.25rem;\n            padding-bottom: 1.25rem;\n        \">\n        <style scoped>{css}</style>\n        @HTMLCODE\n    </div>\n    \"\"\"\n    html = \" \".join([x.strip() for x in html.strip().split(\"\\n\")])\n    html = html.replace(\"@HTMLCODE\", result)\n    return html\nif __name__ == \"__main__\":\n    source_code = \"\"\"\n    def extract_front_matter(md_text):\n        import re\n        front_matter_pattern = r\"^---\\\\n(.*?)\\\\n---\\\\n\"  # Regex pattern to match front matter\n        front_matter_match = re.match(front_matter_pattern, md_text, re.DOTALL)\n        if front_matter_match:\n            return front_matter_match.group(1)\n        else:\n            return None\n    \"\"\"\n\n    beautified_code = format(source_code=source_code, source_type=\"python\")\n    with open(\"output.html\", \"w\") as f:\n        f.write(beautified_code)\n\n\n\n`); alert(\"Source code copied to clipboard!\"); })(); ' style=\" position: absolute; right: 0px; top: 0px; text-align: right; color: #fff; cursor: pointer; padding: 0.5rem 0.5rem; border-radius: 0.5rem; \" >📋 COPY</div>  <div class=\"code\"><table class=\"codetable\"><tr><td class=\"linenos\"><div class=\"linenodiv\"><pre><span class=\"normal\"> 1</span>\r\n<span class=\"normal\"> 2</span>\r\n<span class=\"normal\"> 3</span>\r\n<span class=\"normal\"> 4</span>\r\n<span class=\"normal\"> 5</span>\r\n<span class=\"normal\"> 6</span>\r\n<span class=\"normal\"> 7</span>\r\n<span class=\"normal\"> 8</span>\r\n<span class=\"normal\"> 9</span>\r\n<span class=\"normal\">10</span>\r\n<span class=\"normal\">11</span>\r\n<span class=\"normal\">12</span>\r\n<span class=\"normal\">13</span>\r\n<span class=\"normal\">14</span>\r\n<span class=\"normal\">15</span>\r\n<span class=\"normal\">16</span>\r\n<span class=\"normal\">17</span>\r\n<span class=\"normal\">18</span>\r\n<span class=\"normal\">19</span>\r\n<span class=\"normal\">20</span>\r\n<span class=\"normal\">21</span>\r\n<span class=\"normal\">22</span>\r\n<span class=\"normal\">23</span>\r\n<span class=\"normal\">24</span>\r\n<span class=\"normal\">25</span>\r\n<span class=\"normal\">26</span>\r\n<span class=\"normal\">27</span>\r\n<span class=\"normal\">28</span>\r\n<span class=\"normal\">29</span>\r\n<span class=\"normal\">30</span>\r\n<span class=\"normal\">31</span>\r\n<span class=\"normal\">32</span>\r\n<span class=\"normal\">33</span>\r\n<span class=\"normal\">34</span>\r\n<span class=\"normal\">35</span>\r\n<span class=\"normal\">36</span>\r\n<span class=\"normal\">37</span>\r\n<span class=\"normal\">38</span>\r\n<span class=\"normal\">39</span>\r\n<span class=\"normal\">40</span>\r\n<span class=\"normal\">41</span>\r\n<span class=\"normal\">42</span>\r\n<span class=\"normal\">43</span>\r\n<span class=\"normal\">44</span>\r\n<span class=\"normal\">45</span>\r\n<span class=\"normal\">46</span>\r\n<span class=\"normal\">47</span>\r\n<span class=\"normal\">48</span>\r\n<span class=\"normal\">49</span>\r\n<span class=\"normal\">50</span>\r\n<span class=\"normal\">51</span></pre></div></td><td class=\"code\"><div><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">format</span><span class=\"p\">(</span><span class=\"n\">source_code</span><span class=\"p\">,</span> <span class=\"n\">source_type</span><span class=\"p\">):</span>\r\n    <span class=\"kn\">from</span> <span class=\"nn\">pygments</span> <span class=\"kn\">import</span> <span class=\"n\">highlight</span>\r\n    <span class=\"kn\">from</span> <span class=\"nn\">pygments.lexers</span> <span class=\"kn\">import</span> <span class=\"n\">get_lexer_by_name</span>\r\n    <span class=\"kn\">from</span> <span class=\"nn\">pygments.styles</span> <span class=\"kn\">import</span> <span class=\"n\">get_style_by_name</span>\r\n    <span class=\"kn\">from</span> <span class=\"nn\">pygments.formatters</span> <span class=\"kn\">import</span> <span class=\"n\">HtmlFormatter</span>\r\n\r\n    <span class=\"c1\"># https://pygments.org/styles/</span>\r\n    <span class=\"c1\"># 위 사이트를 참고하여 원하는 스타일을 고른다</span>\r\n    <span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"n\">get_style_by_name</span><span class=\"p\">(</span><span class=\"s2\">&quot;nord&quot;</span><span class=\"p\">)</span>\r\n    <span class=\"n\">background_color</span> <span class=\"o\">=</span> <span class=\"n\">style</span><span class=\"o\">.</span><span class=\"n\">background_color</span>\r\n    <span class=\"n\">lexer</span> <span class=\"o\">=</span> <span class=\"n\">get_lexer_by_name</span><span class=\"p\">(</span><span class=\"n\">source_type</span><span class=\"p\">,</span> <span class=\"n\">stripall</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\r\n    <span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">HtmlFormatter</span><span class=\"p\">(</span>\r\n        <span class=\"n\">style</span><span class=\"o\">=</span><span class=\"n\">style</span><span class=\"p\">,</span>\r\n        <span class=\"n\">linenos</span><span class=\"o\">=</span><span class=\"s2\">&quot;table&quot;</span><span class=\"p\">,</span>\r\n        <span class=\"n\">cssclass</span><span class=\"o\">=</span><span class=\"s2\">&quot;code&quot;</span><span class=\"p\">,</span>\r\n        <span class=\"n\">wrapcode</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\r\n    <span class=\"p\">)</span>\r\n\r\n    <span class=\"n\">css</span> <span class=\"o\">=</span> <span class=\"n\">formatter</span><span class=\"o\">.</span><span class=\"n\">get_style_defs</span><span class=\"p\">()</span>\r\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">highlight</span><span class=\"p\">(</span><span class=\"n\">source_code</span><span class=\"p\">,</span> <span class=\"n\">lexer</span><span class=\"p\">,</span> <span class=\"n\">formatter</span><span class=\"p\">)</span>\r\n    <span class=\"kn\">import</span> <span class=\"nn\">re</span>\r\n    <span class=\"n\">css</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s2\">&quot;/\\*.*?\\*/&quot;</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">DOTALL</span><span class=\"p\">),</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"n\">css</span><span class=\"p\">)</span>\r\n    <span class=\"n\">css</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">css</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)])</span>\r\n    <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;&quot;&quot;</span>\r\n<span class=\"s2\">    &lt;div style=&quot;</span>\r\n<span class=\"s2\">            background-color: </span><span class=\"si\">{</span><span class=\"n\">background_color</span><span class=\"si\">}</span><span class=\"s2\">;</span>\r\n<span class=\"s2\">            padding-top: 1.25rem;</span>\r\n<span class=\"s2\">            padding-bottom: 1.25rem;</span>\r\n<span class=\"s2\">        &quot;&gt;</span>\r\n<span class=\"s2\">        &lt;style scoped&gt;</span><span class=\"si\">{</span><span class=\"n\">css</span><span class=\"si\">}</span><span class=\"s2\">&lt;/style&gt;</span>\r\n<span class=\"s2\">        @HTMLCODE</span>\r\n<span class=\"s2\">    &lt;/div&gt;</span>\r\n<span class=\"s2\">    &quot;&quot;&quot;</span>\r\n    <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"s2\">&quot; &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">html</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)])</span>\r\n    <span class=\"n\">html</span> <span class=\"o\">=</span> <span class=\"n\">html</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">&quot;@HTMLCODE&quot;</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\r\n    <span class=\"k\">return</span> <span class=\"n\">html</span>\r\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\r\n    <span class=\"n\">source_code</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;</span>\r\n<span class=\"s2\">    def extract_front_matter(md_text):</span>\r\n<span class=\"s2\">        import re</span>\r\n<span class=\"s2\">        front_matter_pattern = r&quot;^---</span><span class=\"se\">\\\\</span><span class=\"s2\">n(.*?)</span><span class=\"se\">\\\\</span><span class=\"s2\">n---</span><span class=\"se\">\\\\</span><span class=\"s2\">n&quot;  # Regex pattern to match front matter</span>\r\n<span class=\"s2\">        front_matter_match = re.match(front_matter_pattern, md_text, re.DOTALL)</span>\r\n<span class=\"s2\">        if front_matter_match:</span>\r\n<span class=\"s2\">            return front_matter_match.group(1)</span>\r\n<span class=\"s2\">        else:</span>\r\n<span class=\"s2\">            return None</span>\r\n<span class=\"s2\">    &quot;&quot;&quot;</span>\r\n\r\n    <span class=\"n\">beautified_code</span> <span class=\"o\">=</span> <span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"n\">source_code</span><span class=\"o\">=</span><span class=\"n\">source_code</span><span class=\"p\">,</span> <span class=\"n\">source_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;python&quot;</span><span class=\"p\">)</span>\r\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">&quot;output.html&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;w&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\r\n        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">beautified_code</span><span class=\"p\">)</span>\r\n</code></pre></div></td></tr></table></div>\r\n </div>\n                    </div>\n                </div>\n            </div>\n            ", "outlinks": ["-😀 Slip Box (Done)/20240323_1711156165597"], "resources": [], "inlinks": [], "filename": "20240329_1711705653695"}